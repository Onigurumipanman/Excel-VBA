Sub グラフ_010_グラフ体裁調整()
'グラフ汎用テンプレート

Dim myChr As Chart
Dim myChrid As Long
'Dim TitleCell As Range
Dim YokojikuCell As Range
Dim TatejikuCell As Range

ActiveChart.ChartArea.Select
Set myChr = ActiveChart
'myChrid = myChr.Index

'タイトル・凡例・軸ラベル作成
    With myChr
        .HasTitle = True
        .HasAxis(xlCategory) = ture
        
        .SetElement (msoElementPrimaryCategoryAxisShow)
        .HasAxis(xlValue) = ture
        .SetElement (msoElementPrimaryValueAxisShow)
        .HasLegend = True
    End With

'横軸
    With myChr.Axes(xlCategory)
        .HasTitle = True
        .AxisTitle.Caption = "Yokojikucell"
        .HasMajorGridlines = True
        .Format.Line.ForeColor.RGB = RGB(0, 0, 0)
        .HasMajorGridlines = True
        .HasMinorGridlines = True
        .MajorTickMark = xlInside
        .MinorTickMark = xlInside
    End With
    
'縦軸
    With myChr.Axes(xlValue)
        .HasTitle = True
        .AxisTitle.Caption = "Tatejikucell"
        .HasMajorGridlines = True
        .Format.Line.ForeColor.RGB = RGB(0, 0, 0)
        .HasMajorGridlines = True
        .HasMinorGridlines = True
        .MajorTickMark = xlInside
        .MinorTickMark = xlInside
    End With

'グラフ全体のフォント・枠
    With myChr.ChartArea
        .Font.Size = 16
        .Font.Name = "ＭＳ ゴシック"
        .Font.Color = RGB(0, 0, 0)
        .Border.LineStyle = 0
        .Format.Fill.ForeColor.RGB = RGB(255, 255, 255)
    End With
    
'タイトル・凡例を重ねて表示
    myChr.ChartTitle.Select
    myChr.SetElement (msoElementChartTitleCenteredOverlay)
    myChr.Legend.Select
    myChr.Legend.IncludeInLayout = False

'プロットエリア
    With myChr.PlotArea
        .Format.Line.ForeColor.RGB = RGB(0, 0, 0)
        .Format.Line.Weight = 3
        .Format.Fill.ForeColor.RGB = RGB(255, 255, 255)
    End With

'グラフタイトル
    With myChr.ChartTitle
        .Text = "Titlecell"
        .Format.Line.ForeColor.RGB = RGB(0, 0, 0)
        .Format.Fill.ForeColor.RGB = RGB(255, 255, 255)
    End With
    
'凡例
    With myChr.Legend
        .Format.Line.ForeColor.RGB = RGB(0, 0, 0)
        .Format.Fill.ForeColor.RGB = RGB(255, 255, 255)
    End With

End Sub

Sub グラフ_020_新規シートにフォーム作成()
'☆を基準に一覧表を作成する

Dim Kijun As Range
Dim i As Long: i = 1
Dim k As Long: k = 1

'新規シートを作成しシート名「☆k」、基準位置A1を設定する
Worksheets.Add
On Error Resume Next
    Do
        Err.Clear
            ActiveSheet.Name = "☆" & k
        k = k + 1
    Loop Until Err.Number = 0
On Error GoTo 0

Set Kijun = ActiveSheet.Cells(1, 1)
Kijun = ActiveSheet.Name

'実際にフォーマット作成する
For i = 1 To 3
Kijun.Offset(0, 1 + i) = "プロット"
Next i

For i = 1 To 2
Kijun.Offset(0, 4 + i) = "プロット枠"
Next i

For i = 1 To 2
Kijun.Offset(0, 6 + i) = "線"
Next i

Kijun.Offset(1, 0) = "形一覧"
Kijun.Offset(1, 1) = "系列名"
Kijun.Offset(1, 2) = "形"
Kijun.Offset(1, 3) = "サイズ"
Kijun.Offset(1, 4) = "塗り色"
Kijun.Offset(1, 5) = "太さ"
Kijun.Offset(1, 6) = "色"
Kijun.Offset(1, 7) = "太さ"
Kijun.Offset(1, 8) = "色"
Kijun.Offset(2, 0) = "1: ■"
Kijun.Offset(3, 0) = "2: ◆"
Kijun.Offset(4, 0) = "3: ▲"
Kijun.Offset(5, 0) = "4: ×"
Kijun.Offset(6, 0) = "5: ＊"
Kijun.Offset(7, 0) = "6: -"
Kijun.Offset(8, 0) = "7: ―"
Kijun.Offset(9, 0) = "8: ●"
Kijun.Offset(10, 0) = "9: ＋"

With Range(Kijun, Kijun.Offset(10, 8))
    .HorizontalAlignment = xlCenter
    .Interior.ColorIndex = xlNone
    .Borders(xlEdgeTop).LineStyle = xlContinuous
    .Borders(xlEdgeBottom).LineStyle = xlContinuous
    .Borders(xlEdgeLeft).LineStyle = xlContinuous
    .Borders(xlEdgeRight).LineStyle = xlContinuous
    .Borders(xlInsideVertical).LineStyle = xlContinuous
    .Borders(xlInsideHorizontal).LineStyle = xlContinuous
End With

With Kijun.Offset(2, 5)
    .Borders(xlDiagonalUp).LineStyle = xlContinuous
End With

With Range(Kijun.Offset(0, 1), Kijun.Offset(1, 8))
    .Interior.Color = RGB(204, 255, 255)
End With

With Range(Kijun.Offset(2, 0), Kijun.Offset(10, 0))
    .Interior.Color = RGB(255, 255, 204)
End With

End Sub


Sub グラフ_030_書式の抽出■グラフ→セル()
'選択中のグラフからプロットと線の書式を抽出し、書き出す

Dim myChr As Chart: Set myChr = Nothing
    Set myChr = ActiveChart
    If myChr Is Nothing Then
        MsgBox "エラー：グラフシート内のグラフを選択して開始すること"
        Exit Sub
    End If
    
Dim SerNum As Long: SerNum = 0
Dim SerName As String: SerName = ""
Dim i As Long: i = 1 '系列個数用のカウンタ
Dim Kijun As Range: Set Kijun = Nothing
Dim bufKijun As Variant: Set bufKijun = Nothing

Set bufKijun = Application.inputbox("書き出し先とするシート内にある任意のセルを選択", Type:=8)
    If IsObject(bufKijun) = False Then
        MsgBox "エラー：セルを選択すること"
        Exit Sub
    End If
Set Kijun = bufKijun.Parent.Cells(1, 1) 'そのシートのセルA1をKijunに設定

'系列の個数をカウントし、系列名をセルに記入する
    SerNum = myChr.SeriesCollection.Count
    With myChr
            For i = 1 To SerNum
            SerName = .SeriesCollection(i).Name
            Kijun.Offset(1 + i, 1) = SerName
            Next i
    End With

'変数
Dim PStyle As Long: PStyle = 0 'マーカーの種類
Dim PSize As Long: PSize = 0 'マーカーのサイズ
Dim PRGB As Long: PRGB = 0 'マーカーの塗りつぶし色
'Dim PBorderWeight As Single: PBorderWeight = 0 'マーカーの枠線の太さ：VBAのコードが未実装
Dim PBorderRGB As Long: PBorderRGB = 0 'マーカーの枠線の色
Dim LWeight As Single: LWeight = 0 '線の太さ
Dim LRGB As Long: LRGB = 0 '線の色
Dim j As Long: j = 1 '系列書式設定用のカウンタ

For j = 1 To SerNum
    
    With myChr.SeriesCollection(j)
        PStyle = .MarkerStyle
        PSize = .MarkerSize
        PRGB = .MarkerBackgroundColor
        'PBorderWeight = .Border.Weight：VBAのコードが未実装
        PBorderRGB = .MarkerForegroundColor
        LWeight = .Format.Line.Weight
        LRGB = .Format.Line.ForeColor.RGB
    End With
    
    '各変数の値の書き出し
    Kijun.Offset(1 + j, 2).Value = PStyle
    Kijun.Offset(1 + j, 3).Value = PSize
    Kijun.Offset(1 + j, 4).Interior.Color = PRGB
    'Kijun.Offset(1 + j, 5).Value = PBorderWeight：VBAのコードが未実装
    Kijun.Offset(1 + j, 6).Interior.Color = PBorderRGB
    Kijun.Offset(1 + j, 7).Value = LWeight
    Kijun.Offset(1 + j, 8).Interior.Color = LRGB

Next j

End Sub

Sub グラフ_040_書式の設定■セル→グラフ()
'選択中のグラフからプロットと線の書式を抽出し、書き出す

Dim myChr As Chart: Set myChr = Nothing
    Set myChr = ActiveChart
    If myChr Is Nothing Then
        MsgBox "エラー：グラフシート内のグラフを選択して開始すること"
        Exit Sub
    End If
    
Dim SerNum As Long: SerNum = 0
Dim SerName As String: SerName = ""
Dim i As Long: i = 1 '系列個数用のカウンタ
Dim Kijun As Range: Set Kijun = Nothing
Dim bufKijun As Variant: Set bufKijun = Nothing

Set bufKijun = Application.inputbox("参照元とするシート内にある任意のセルを選択", Type:=8)
    If IsObject(bufKijun) = False Then
        MsgBox "エラー：セルを選択すること"
        Exit Sub
    End If
Set Kijun = bufKijun.Parent.Cells(1, 1) 'そのシートのセルA1をKijunに設定
SerNum = myChr.SeriesCollection.Count

'系列名はセル参照しない（そのほうがよさそう）

'変数
Dim PStyle As Long: PStyle = 0 'マーカーの種類
Dim PSize As Long: PSize = 0 'マーカーのサイズ
Dim PRGB As Long: PRGB = 0 'マーカーの塗りつぶし色
'Dim PBorderWeight As Single: PBorderWeight = 0 'マーカーの枠線の太さ：VBAのコードが未実装
Dim PBorderRGB As Long: PBorderRGB = 0 'マーカーの枠線の色
Dim LWeight As Single: LWeight = 0 '線の太さ
Dim LRGB As Long: LRGB = 0 '線の色
Dim j As Long: j = 1 '系列書式設定用のカウンタ

For j = 1 To SerNum
    
    '各変数の値をセルから取り出す
    PStyle = Kijun.Offset(1 + j, 2).Value
    PSize = Kijun.Offset(1 + j, 3).Value
    PRGB = Kijun.Offset(1 + j, 4).Interior.Color
    'PBorderWeight = Kijun.Offset(1 + j, 5).Value：VBAのコードが未実装
    PBorderRGB = Kijun.Offset(1 + j, 6).Interior.Color
    LWeight = Kijun.Offset(1 + j, 7).Value
    LRGB = Kijun.Offset(1 + j, 8).Interior.Color
    
    'グラフに反映する
    With myChr.SeriesCollection(j)
        .MarkerStyle = PStyle
        .MarkerSize = PSize
        .MarkerBackgroundColor = PRGB
        '.Border.Weight = PBorderWeight：VBAのコードが未実装
        .MarkerForegroundColor = PBorderRGB
        .Format.Line.Weight = LWeight
        .Format.Line.ForeColor.RGB = LRGB
    End With
Next j

End Sub

